# -*- coding: utf-8 -*-
import os
import re


def get_opcode_sequence(filename):
    """
    获取操作码序列
    """
    opcode_seq = []
    p = re.compile(r'\s([a-fA-F0-9]{2}\s)+\s*([a-z]+)')
    with open(filename, errors='ignore') as f:
        for line in f:
            if line.startswith(".text"):
                m = re.findall(p, line)
                if m:
                    opc = m[0][1]
                    if opc != "align":
                        opcode_seq.append(opc)
    return opcode_seq

def get_all_opcode_seqs(asm_path):
    """
    Get all opcode sequences from all .asm files, which is used in Doc2Vec.
    :param asm_path: The path of all .asm files.
    :return: All opcode sequences, which is a list.
    """
    # Construct all instruction in all .asm files
    opcode_seq_list = []
    for dir in os.listdir(asm_path):
        for file in os.listdir(asm_path + dir):
            opcode_seq = get_opcode_sequence(asm_path + dir + '/' + file)
            opcode_seq_list.append(opcode_seq)

    return opcode_seq_list
